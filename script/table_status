#!/usr/bin/env ruby
# frozen_string_literal: true

#
# Generates a very simple report of the state of the tables in the warehouse.  It pairs the results of normal and
# current tables, and separates those from tables that don't have this information.  Because this is run as a cron
# job, the output will be emailed.

require File.expand_path('../config/environment', __dir__)

module ActiveRecord::TableStatus
  def each_table(ignore = [])
    paired, unpaired = (tables - ignore).group_by { |name| name.sub(/^current_/, '') }.partition { |_, names| names.size > 1 }
    paired.each do |name, _|
      current = rows_in("current_#{name}").to_i
      total = rows_in(name).to_i
      non_current = total - current
      yield(name, current, total, non_current, format('%03.6f', (non_current.to_f / total.to_f)))
    end
    unpaired.each do |name, _|
      yield(name, rows_in(name), '-', '-', '-')
    end
  end

  private

  def rows_in(name)
    select_one("SELECT count(*) AS total FROM #{quote_table_name(name)}")['total']
  end
end

class << ActiveRecord::Base.connection
  include ActiveRecord::TableStatus
end

IGNOREABLE = ['uuid_objects'].freeze

puts 'Table,Historic,Current,Non-Current,Ratio'
ActiveRecord::Base.connection.each_table(IGNOREABLE) do |name, current_rows, total_rows, non_current, ratio|
  puts "#{name},#{total_rows},#{current_rows},#{non_current},#{ratio}"
end
